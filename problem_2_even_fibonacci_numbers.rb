#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

# def even?(current)
#   even_array = []
#   if current % 2 == 0
#     even_array.push(current)
# end

def fib(limit, previous, current, array = [])
  # @previous = previous + current
  @previous = previous
  @current = current
  @even_array = array
  while (@current) < limit
    @even_array.push(current)
    @previous = current
    @current = previous + current
    fib(limit, @previous, @current, @even_array)
  end
  return @even_array
end

def even_sum
  fib(4000000, 1, 1).select { |number| number.even? }.inject { |sum, n| sum + n}
  # return sum
end


p fib(4000000, 1, 1)
p even_sum